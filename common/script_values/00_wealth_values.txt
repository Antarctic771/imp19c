### CONSUMPTION VALUES

tribesemen_wealth_demand = {
	# Subsistence and pastoral economy mean very little demand from the market.
	value = 0.2
	multiply = num_of_tribesmen
}

proletariat_wealth_demand = {
	# Sufficient to support 1 pop, no more. Basic subsistence.
	value = 1
	multiply = num_of_proletariat
}

lower_strata_wealth_demand = {
	# Subsistence means reduced demand from the market.
	value = 0.9
	multiply = num_of_lower_strata
}

# Higher strata may pay part of their excess down to employees to satisfy employees' demand

middle_strata_wealth_demand = {
	# Purchasing in excess of subsistence.
	value = 1.5
	multiply = num_of_middle_strata
}

upper_strata_wealth_demand = {
	# Purchasing significantly in excess of subsistence
	value = 2
	multiply = num_of_upper_strata
}

local_slaves_wealth_consumed = {
    value = {
        add = slaves_wealth_demand
    }
}

local_tribesmen_wealth_consumed = {
    value = {
        add = tribesmen_wealth_demand
    }
}

local_proletariat_wealth_consumed = {
    value = {
        add = proletariat_wealth_demand
    }
}

local_lower_strata_wealth_consumed = {
    value = {
        add = lower_strata_wealth_demand
    }
}

local_middle_strata_wealth_consumed = {
    value = {
        add = middle_strata_wealth_demand
    }
}

local_upper_strata_wealth_consumed = {
    value = {
        add = upper_strata_wealth_demand
    }
}

### WEALTH OUTPUT VALUES

# 1% of wealth = 0.122 recurring

slaves_wealth_output = {
	# Slaves are innately a net negative, their only economic bonus being the goods they output via labour
	value = 0.2
	multiply = num_of_slaves
}

tribesemen_wealth_output = {
	# Sufficient to support 1 pop, no more. Basic subsistence.
	value = 1
	multiply = num_of_tribesmen
}

proletariat_wealth_output = {
	# Proletariat produce only subsistence wealth but also demand the same amount.
	value = 1
	multiply = num_of_proletariat
}

lower_strata_wealth_output = {
	# Sufficient to support 1 pop, plus a tenth in excess. Represents organised labour.
	value = 1.1
	multiply = num_of_lower_strata
}

middle_strata_wealth_output = {
	# https://eml.berkeley.edu/~webfac/cromer/e211_f12/LindertWilliamson.pdf
	# Based on relative share of wealth in "Next 40%" at p.31
	# Taking "Next 40%" to represent middle_strata with roughly 25% of wealth
	# Taking "Bottom 40%" to represent lower_strata with roughly 9% of wealth
	value = 3.05
	multiply = num_of_middle_strata
}

upper_strata_wealth_output = {
	# https://eml.berkeley.edu/~webfac/cromer/e211_f12/LindertWilliamson.pdf
	# Based on relative share of wealth in "Next 40%" at p.31
	# Taking "Top 20%" to represent middle_strata with roughly 25% of wealth
	# Taking "Bottom 40%" to represent lower_strata with roughly 9% of wealth
	value = 7.027
	multiply = num_of_upper_strata
}

local_slaves_wealth_gain = {
    value = {
        add = tribesmen_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

local_tribesmen_wealth_gain = {
    value = {
        add = tribesmen_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

local_proletariat_wealth_gain = {
    value = {
        add = proletariat_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

local_lower_strata_wealth_gain = {
    value = {
        add = lower_strata_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

local_middle_strata_wealth_gain = {
    value = {
        add = middle_strata_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

local_upper_strata_wealth_gain = {
    value = {
        add = upper_strata_wealth_output
    }
    # LOCAL AUTONOMY - we do plan to add this, so good to keep
    #multiply = {
    #    value = 1
    #    subtract = local_autonomy_percentage_value
    #}
}

### WEALTH POOL

local_wealth_gain  = {
    add = local_slaves_wealth_gain
    add = local_tribesmen_wealth_gain
    add = local_lower_strata_wealth_gain
    add = local_middle_strata_wealth_gain
    add = local_upper_strata_wealth_gain
}

local_wealth_pool = {
    value = 0
    if = { limit = { has_variable = local_wealth_pool_update }
        add = var:local_wealth_pool_update
    }
}